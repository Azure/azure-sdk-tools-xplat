/*** Generated by streamline 0.4.5 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb; var uuid = require("node-uuid");
















var should = require("should");
var cli = require("../cli");
var capture = require("../util").capture;

function doCapture(action, cb) {
  return capture(action, function(result) {
    if ((result.exitStatus == 0)) {
      cb(null, result); }
     else {
      cb((result.errorText || (("exit code: " + result.exitStatus)))); } ; });};




suite("cli", function() {
  suite("site log", function() {

    var createdSites = [];

    function newName() {
      var name = ("testsite-" + uuid.v4());
      createdSites.push(name);
      return name; };


    teardown(function __1(_) { var siteName, result; var __frame = { name: "__1", line: 43 }; return __func(_, this, arguments, __1, 0, __frame, function __$__1() { return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$__1() { __more = false;
            var __2 = (createdSites.length !== 0); if (__2) {
              siteName = createdSites.pop();
              return doCapture(function() { deleteSite(siteName); }, __cb(_, __frame, 3, 21, function ___(__0, __1) { result = __1;
                result.text.should.equal(""); while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(_); }); });



    test("tail", function __2(_) { var result, siteName; var __frame = { name: "__2", line: 51 }; return __func(_, this, arguments, __2, 0, __frame, function __$__2() {

        siteName = newName();

        return doCapture(function() { createSite(siteName); }, __cb(_, __frame, 4, 15, function ___(__0, __1) { result = __1;
          result.text.should.equal("");

          return doCapture(function() { showSite(siteName); }, __cb(_, __frame, 7, 15, function ___(__0, __2) { result = __2;
            result.text.should.include((siteName.toLowerCase() + ".scm"));

            return doCapture(function() { connectLogStream(siteName); }, __cb(_, __frame, 10, 15, function ___(__0, __3) { result = __3;
              result.text.should.include("Welcome, you are now connected to log-streaming service."); _(); }, true)); }, true)); }, true)); }); });


    function createSite(siteName) {
      var cmd = ((("node cli.js site create " + siteName) + " --git --json --location")).split(" ");
      cmd.push("West US");
      cli.parse(cmd); };


    function showSite(siteName) {
      var cmd = ((("node cli.js site show " + siteName) + " --json")).split(" ");
      cli.parse(cmd); };


    function deleteSite(siteName) {
      var cmd = ((("node cli.js site delete " + siteName) + " --json --quiet")).split(" ");
      cli.parse(cmd); };


    function connectLogStream(siteName) {
      setTimeout(function() { process.exit(0); }, 5000);
      var cmd = (("node cli.js site log tail " + siteName)).split(" ");
      cli.parse(cmd); }; });});